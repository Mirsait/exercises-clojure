---

name: Префиксная нотация
theory: |
  Как вы могли заметить, в популярных языках программирования, вызов функции выглядит примерно так `f(arg1, arg2, arg3)`, однако в Clojure, как и в других лиспо-подобных языках, используется префиксная нотация (польская запись). С непривычки такой способ записи может показаться неудобным, однако при вложенном вызове становится очевидным удобство такого подхода (опять же, потребуется некоторое время, чтобы привыкнуть). Например, вложенный вызов функции сложения, вычитания и умножения (да, математические операции тоже функции!) выглядит следующим образом:

  ```clojure
  (+
    1
    (- 2 3)
    (* 4 5 6)
    (+ 7 8 9 10 11 12))
  ```

  Если аккуратно форматировать Clojure код, то его удобно читать, особенно, если вызов функции идет больше чем для двух аргументов. Еще стоит заметить, что перечисление элементов не требует запятых, однако их можно писать, Clojure принимает оба варианта.

  ```clojure
  (+ 1 2 3)   ; => 6
  (+ 1, 2, 3) ; => 6
  ```

instructions: |
  Выведите в стандартный поток вывода (с помощью функции `println`) следующее выражение: `1 + 10 - 2 * 7`
tips:
  - |
    [Префиксная нотация](https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D1%8C%D1%81%D0%BA%D0%B0%D1%8F_%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D1%8C)
  - |
    [Стандартный линтер и форматтер Clojure кода](https://github.com/weavejester/cljfmt)
