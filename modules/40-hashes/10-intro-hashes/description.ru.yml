---

name: О хеш-мапах
theory: |
  В Clojure, как и в остальных языках используются хеш-мапы или как их еще называют словарями или ассоциативными массивами.  Хеш-мапы в Clojure тоже иммутабельны. Для создания хеш-мапы ключ и значение записываются в фигурных скобках `{key value}`. Важно, что в создаваемом словаре каждому ключу записывается соответствующее значение, иначе возникнет синтаксическая ошибка. Теперь рассмотрим примеры:

  ```clojure
  (def my-hash
    {:a 1
     :b "2"
     :c (fn [a b] (+ a b)) ; анонимная функция
     "val" 12.2
     7 "b"})

  (def wrong-hash {"a"}) ; у ключа хеш-мапы всегда должно быть значение
  Syntax error reading source at (REPL:1:22).
  Map literal must contain an even number of forms

  ; извлечем элемент
  (my-hash :a) ; => 1
  (my-hash :b) ; => "2"
  (my-hash 7)  ; => "b"

  ; извлечем анонимную функцию и тут же вызовем её
  ((my-hash :c) 2 3) ; => 5

  ; добавим элемент
  (assoc {:a "b"} "c" 4)
  ; => {:a "b" "c" 4}

  ; уберем элемент
  (dissoc {:a "b"} :a)
  ; => {}
  ```

instructions: |
  Создайте функцию `resolve`, которая извлекает из хеш-мапы доменов IP, связанный с именем домена. Если такая запись отсутствует, то верните `"DNS_PROBE_FINISHED_NXDOMAIN"`.
  Примеры:

  ```clojure
  (resolve {"rubyonrails.org" "211.116.107.5" "clojure.org" "103.95.84.1" "phoenixframework.org" "234.214.199.63" "reactjs.org" "20.199.101.214"}
    "clojure.org")
  ; => "103.95.84.1"
  (resolve {"rhythm.ru" "201.116.147.4" "building.ru" "103.176.11.27" "hexlet.io" "234.214.199.63" "brass.ru" "201.116.147.4"}
    "hexlet.io")
  ; => "234.214.199.63"
  (resolve {"some.com" "127.0.0.1"} "test.net")
  ; => "DNS_PROBE_FINISHED_NXDOMAIN"
  ```

tips:
  - |
    [Официальная документация](https://clojuredocs.org/clojure.core/hash-map)
